version: '3.8'

services:
  # MongoDB for Auth Service
  mongodb:
    image: mongo:7.0
    container_name: lego-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: lego_auth
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ../apps/api/auth-service/db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - auth-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MongoDB Express for web-based admin interface
  mongo-express:
    image: mongo-express:1.0.0
    container_name: lego-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - auth-network

  # Auth Service
  auth-service:
    build:
      context: ../apps/api/auth-service
      dockerfile: Dockerfile
    container_name: lego-auth-service
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/lego_auth?authSource=admin
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - JWT_EXPIRE=30d
      - COOKIE_EXPIRE=30
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:5173}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.ethereal.email}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USER=${EMAIL_USER:-test@example.com}
      - EMAIL_PASS=${EMAIL_PASS:-password}
      - EMAIL_FROM=${EMAIL_FROM:-noreply@legoapp.com}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - auth-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/auth/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  auth-network:
    driver: bridge 