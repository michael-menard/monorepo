version: '3.8'

services:
  # MongoDB for Auth Service
  mongodb:
    image: mongo:7.0
    container_name: lego-mongodb-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: lego_auth_dev
    volumes:
      - mongodb_dev_data:/data/db
      - mongodb_dev_config:/data/configdb
    networks:
      - lego-dev-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MongoDB Express for web-based admin interface
  mongo-express:
    image: mongo-express:1.0.0
    container_name: lego-mongo-express-dev
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - lego-dev-network

  # PostgreSQL for LEGO Projects API
  postgres:
    image: postgres:15
    container_name: lego-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: lego_projects_dev
      POSTGRES_USER: lego_user
      POSTGRES_PASSWORD: lego_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - lego-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lego_user -d lego_projects_dev"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Elasticsearch for search functionality
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: lego-elasticsearch-dev
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - cluster.name=lego-dev-cluster
      - node.name=lego-dev-node
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_dev_data:/usr/share/elasticsearch/data
    networks:
      - lego-dev-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kibana for Elasticsearch management
  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: lego-kibana-dev
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - lego-dev-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: lego-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - lego-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mongodb_dev_data:
    driver: local
  mongodb_dev_config:
    driver: local
  postgres_dev_data:
    driver: local
  elasticsearch_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  lego-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16 