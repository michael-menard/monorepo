{
  "master": {
    "tasks": [
      {
        "id": 1,
        "title": "Create Infrastructure-Only Docker Setup",
        "description": "Extract infrastructure services from main docker-compose.yml and create lightweight docker-compose-dev.yml with only databases, cache, search, and management tools",
        "status": "done",
        "dependencies": [],
        "priority": "high",
        "details": "Create docker-compose-dev.yml containing only:\n- MongoDB (port 27017)\n- PostgreSQL (port 5432) \n- Redis (port 6379)\n- Elasticsearch (port 9200)\n- mongo-express (port 8081)\n- pgAdmin (port 8082)\n\nRemove all application services (auth-service, lego-api, frontend) from Docker. Configure proper networking, volumes, and ensure startup time <10 seconds.",
        "testStrategy": "Test infrastructure startup independently, validate database connections, verify management tools accessibility, measure startup time"
      },
      {
        "id": 2,
        "title": "Configure Auth Service for Native Execution",
        "description": "Update auth service package.json scripts and environment configuration to run natively while connecting to containerized MongoDB",
        "status": "done",
        "dependencies": [
          1
        ],
        "priority": "high",
        "details": "Update apps/api/auth-service/package.json scripts for native execution. Configure environment variables to connect to localhost:27017 MongoDB. Test hot reload with nodemon. Ensure proper TypeScript compilation and source maps.",
        "testStrategy": "Verify MongoDB connection from native Node.js process, test all auth endpoints, validate hot reload functionality, run all unit and integration tests"
      },
      {
        "id": 3,
        "title": "Configure LEGO API Service for Native Execution",
        "description": "Update LEGO API service to run natively while connecting to containerized PostgreSQL, Redis, and Elasticsearch",
        "status": "pending",
        "dependencies": [
          1
        ],
        "priority": "high",
        "details": "Configure native execution for apps/api/lego-projects-api. Set up connections to PostgreSQL (localhost:5432), Redis (localhost:6379), and Elasticsearch (localhost:9200). Update package.json scripts and environment variables.",
        "testStrategy": "Test PostgreSQL connection, Redis caching, Elasticsearch search functionality, API endpoints, file upload features. Run all unit, integration, and E2E tests"
      },
      {
        "id": 4,
        "title": "Configure Frontend Applications for Native Development",
        "description": "Update React frontend applications to run with native Vite dev servers connecting to native backend services",
        "status": "pending",
        "dependencies": [
          2,
          3
        ],
        "priority": "high",
        "details": "Configure apps/web/lego-moc-instructions-app to connect to native auth service (localhost:9000) and LEGO API (localhost:3001). Update CORS configuration, environment variables, and Vite dev server setup.",
        "testStrategy": "Test authentication flow end-to-end, verify hot reload, validate API connections, run Playwright E2E tests with native backend"
      },
      {
        "id": 5,
        "title": "Create Enhanced Development Scripts with Turbo",
        "description": "Implement orchestrated startup commands using Turbo with proper service dependency management and health checks",
        "status": "pending",
        "dependencies": [
          1,
          2,
          3,
          4
        ],
        "priority": "medium",
        "details": "Add to root package.json:\n- dev:infra: docker-compose -f docker-compose-dev.yml up -d\n- dev:all: pnpm dev:infra && turbo dev --parallel\n- dev:auth: pnpm dev:infra && turbo dev --filter=@repo/api-auth-service\n- dev:lego: pnpm dev:infra && turbo dev --filter=@repo/api-lego-projects\n- dev:frontend: turbo dev --filter=@repo/lego-moc-instructions-app\n- dev:stop: docker-compose -f docker-compose-dev.yml down\n\nImplement health check scripts for all services.",
        "testStrategy": "Test single command startup (pnpm dev:all), verify individual service commands, validate health checks, measure startup time <30 seconds"
      },
      {
        "id": 6,
        "title": "Configure Native Debugging and Developer Experience",
        "description": "Set up VS Code launch configurations, source maps, enhanced logging, and validate monorepo workspace linking",
        "status": "pending",
        "dependencies": [
          2,
          3,
          4
        ],
        "priority": "medium",
        "details": "Create .vscode/launch.json configurations for native Node.js debugging of auth and LEGO API services. Ensure proper source map generation. Implement enhanced error handling and logging. Test monorepo workspace linking for shared packages.",
        "testStrategy": "Verify native debugging works for all Node.js services, test hot reload, validate shared package changes propagate instantly, confirm IDE TypeScript resolution"
      },
      {
        "id": 7,
        "title": "Update Documentation - Infrastructure Setup",
        "description": "Update __docs__/DOCKER_SETUP.md with new infrastructure-only approach and create HTTP test files",
        "status": "pending",
        "dependencies": [
          1
        ],
        "priority": "medium",
        "details": "Update documentation to reflect infrastructure-only Docker setup. Add inline comments to docker-compose-dev.yml. Create/update __http__ files for testing infrastructure connectivity. Update example configurations and startup scripts.",
        "testStrategy": "Verify all documentation accuracy, test example configurations work, validate HTTP test files connect successfully"
      },
      {
        "id": 8,
        "title": "Update Documentation - Auth Service Native Setup",
        "description": "Update Swagger/OpenAPI docs and __docs__/AUTH-DEV-SETUP.md for native development workflow",
        "status": "pending",
        "dependencies": [
          2
        ],
        "priority": "medium",
        "details": "Update Swagger/OpenAPI docs for auth service endpoints with localhost URLs. Update __docs__/AUTH-DEV-SETUP.md with native development setup instructions. Update all __http__ files with new localhost endpoints. Update authentication examples and demo scripts.",
        "testStrategy": "Validate all auth documentation accuracy, verify examples work correctly, test HTTP request files, confirm demo scripts function properly"
      },
      {
        "id": 9,
        "title": "Update Documentation - LEGO API Native Setup",
        "description": "Update Swagger/OpenAPI docs and README with native LEGO API development setup",
        "status": "pending",
        "dependencies": [
          3
        ],
        "priority": "medium",
        "details": "Update Swagger/OpenAPI docs for LEGO API endpoints. Update __docs__ README with native LEGO API development setup. Update all __http__ request files with new native endpoints. Update file upload examples and search functionality demos.",
        "testStrategy": "Validate all LEGO API documentation accuracy, test examples work correctly, verify HTTP request files, confirm search and upload demos function"
      },
      {
        "id": 10,
        "title": "Update Documentation - Frontend Native Setup",
        "description": "Update frontend documentation with new development setup and API service configuration examples",
        "status": "pending",
        "dependencies": [
          4
        ],
        "priority": "medium",
        "details": "Update frontend documentation with new development setup instructions. Update API service configuration examples in documentation. Update environment configuration examples. Update frontend example components and demo pages.",
        "testStrategy": "Verify frontend documentation accuracy, test configuration examples, validate demo pages work with native backends"
      },
      {
        "id": 11,
        "title": "Update Tests - Infrastructure and Health Checks",
        "description": "Add unit tests for infrastructure health checks and update integration tests for native execution",
        "status": "pending",
        "dependencies": [
          1,
          5
        ],
        "priority": "medium",
        "details": "Add unit tests for infrastructure health check functionality. Update integration tests to work with native service execution. Add tests for new npm scripts and health check functionality. Ensure all tests pass with new architecture.",
        "testStrategy": "Run all unit tests, integration tests, verify health check tests work correctly, confirm test coverage maintained"
      },
      {
        "id": 12,
        "title": "Update Tests - Auth and LEGO API Native Execution",
        "description": "Update auth service and LEGO API unit, integration, and E2E tests for native execution",
        "status": "pending",
        "dependencies": [
          2,
          3
        ],
        "priority": "medium",
        "details": "Update auth service unit and integration tests for native execution. Update LEGO API tests (unit, integration, E2E) for native execution. Ensure all tests connect properly to containerized infrastructure while testing native applications.",
        "testStrategy": "Run all auth service tests, run all LEGO API tests, verify E2E tests work with native services, confirm 100% test pass rate"
      },
      {
        "id": 13,
        "title": "Update Tests - Frontend E2E with Native Backend",
        "description": "Update Playwright E2E tests to work with native backend services",
        "status": "pending",
        "dependencies": [
          4
        ],
        "priority": "medium",
        "details": "Update E2E tests (Playwright) for native backend connections. Ensure tests connect to localhost:9000 (auth) and localhost:3001 (LEGO API). Update test configuration and environment variables.",
        "testStrategy": "Run complete Playwright test suite, verify authentication flows work, confirm API interactions function correctly with native backends"
      },
      {
        "id": 14,
        "title": "Create Migration Guide and Performance Metrics",
        "description": "Write comprehensive migration guide from old Docker setup and document performance improvements",
        "status": "pending",
        "dependencies": [
          5,
          6
        ],
        "priority": "low",
        "details": "Create comprehensive setup and troubleshooting guides. Document performance comparison metrics (startup time, iteration speed, resource usage). Create rollback procedures and team training materials.",
        "testStrategy": "Validate migration guide accuracy by testing with fresh setup, measure and document actual performance improvements, test rollback procedures"
      },
      {
        "id": 15,
        "title": "Final Validation and Documentation Review",
        "description": "Complete final validation of all documentation accuracy, examples functionality, and system integration",
        "status": "pending",
        "dependencies": [
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14
        ],
        "priority": "low",
        "details": "Update all __docs__ files with comprehensive migration guide. Update Swagger/OpenAPI docs with final configuration. Update all __http__ request collections with final endpoints. Update all examples, demos, and sample configurations. Final validation of all documentation accuracy and examples functionality.",
        "testStrategy": "Complete system integration test, validate all documentation is accurate, test all examples work as expected, confirm development environment meets <30 second startup goal"
      }
    ],
    "metadata": {
      "name": "Backend Docker Modernization",
      "description": "Modernize backend development by removing Docker from application services while keeping infrastructure containerized",
      "created": "2025-01-09T03:12:20Z",
      "lastModified": "2025-01-09T03:12:20Z",
      "updated": "2025-09-09T03:39:19.162Z"
    }
  },
  "global": {
    "defaultTag": "master"
  },
  "tags": {
    "master": {
      "description": "Main development tasks for backend Docker modernization",
      "created": "2025-01-09T03:12:20Z"
    }
  }
}