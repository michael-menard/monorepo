name: Auth Service CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'apps/api/auth-service/**'
      - 'packages/**'
      - '.github/workflows/auth-service.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'apps/api/auth-service/**'
      - 'packages/**'
      - '.github/workflows/auth-service.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: test
  JWT_SECRET: test-secret-key-for-ci
  REFRESH_TOKEN_SECRET: test-refresh-secret-key-for-ci
  CSRF_SECRET: test-csrf-secret-key-for-ci
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/auth_test

jobs:
  test:
    name: Test Auth Service
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: auth_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build dependencies
        run: pnpm turbo build --filter="@repo/api-auth-service^..."

      - name: Run tests
        run: pnpm turbo test --filter="@repo/api-auth-service"

      - name: Run tests with coverage
        run: pnpm turbo test:coverage --filter="@repo/api-auth-service"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./apps/api/auth-service/coverage/lcov.info
          flags: auth-service
          name: auth-service-coverage

  build:
    name: Build Auth Service
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build dependencies
        run: pnpm turbo build --filter="@repo/api-auth-service^..."

      - name: Build Auth Service
        run: pnpm turbo build --filter="@repo/api-auth-service"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: auth-service-build
          path: apps/api/auth-service/dist/
          retention-days: 7

  lint:
    name: Lint Auth Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm turbo lint --filter="@repo/api-auth-service"

      - name: Type check
        run: pnpm turbo check-types --filter="@repo/api-auth-service"

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: 'apps/api/auth-service'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
