name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      auth-service: ${{ steps.changes.outputs.auth-service }}
      lego-projects-api: ${{ steps.changes.outputs.lego-projects-api }}
      lego-moc-instructions-app: ${{ steps.changes.outputs.lego-moc-instructions-app }}
      packages: ${{ steps.changes.outputs.packages }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            auth-service:
              - 'apps/api/auth-service/**'
              - 'packages/**'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'turbo.json'
            lego-projects-api:
              - 'apps/api/lego-projects-api/**'
              - 'packages/**'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'turbo.json'
            lego-moc-instructions-app:
              - 'apps/web/lego-moc-instructions-app/**'
              - 'packages/**'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'turbo.json'
            packages:
              - 'packages/**'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'turbo.json'

  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.packages == 'true' || needs.changes.outputs.auth-service == 'true' || needs.changes.outputs.lego-projects-api == 'true' || needs.changes.outputs.lego-moc-instructions-app == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm turbo lint

      - name: Type check
        run: pnpm turbo check-types

  test-packages:
    name: Test Packages
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.packages == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run package tests
        run: pnpm turbo test --filter="./packages/*"

  build-packages:
    name: Build Packages
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.packages == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm turbo build --filter="./packages/*"
