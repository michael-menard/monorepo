name: LEGO Projects API CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'apps/api/lego-projects-api/**'
      - 'packages/**'
      - '.github/workflows/lego-projects-api.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'apps/api/lego-projects-api/**'
      - 'packages/**'
      - '.github/workflows/lego-projects-api.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: test

jobs:
  test:
    name: Test LEGO Projects API
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: lego_projects_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build dependencies
        run: pnpm turbo build --filter="lego-projects-api^..."

      - name: Run tests
        run: pnpm turbo test --filter="lego-projects-api"
        working-directory: apps/api/lego-projects-api

      - name: Run tests with coverage
        run: pnpm turbo test:coverage --filter="lego-projects-api"
        working-directory: apps/api/lego-projects-api

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./apps/api/lego-projects-api/coverage/lcov.info
          flags: lego-projects-api
          name: lego-projects-api-coverage

  build:
    name: Build LEGO Projects API
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build dependencies
        run: pnpm turbo build --filter="lego-projects-api^..."

      - name: Build LEGO Projects API
        run: pnpm turbo build --filter="lego-projects-api"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lego-projects-api-build
          path: apps/api/lego-projects-api/dist/
          retention-days: 7

  lint:
    name: Lint LEGO Projects API
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm turbo lint --filter="lego-projects-api"
        if: ${{ hashFiles('apps/api/lego-projects-api/.eslintrc*') != '' }}

      - name: Type check
        run: pnpm turbo check-types --filter="lego-projects-api"
        if: ${{ hashFiles('apps/api/lego-projects-api/tsconfig.json') != '' }}

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: 'apps/api/lego-projects-api'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
