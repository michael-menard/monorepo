import React, { useState } from 'react';
import { ProfilePage, type ProfileData } from './src';

// Example usage of the ProfilePage component
export const ExampleProfilePage: React.FC = () => {
  const [profile, setProfile] = useState<ProfileData>({
    id: '1',
    username: 'johndoe',
    displayName: 'John Doe',
    bio: 'Software developer and LEGO enthusiast. Building amazing things one brick at a time.',
    avatarUrl: 'https://example.com/avatar.jpg',
    stats: {
      projects: 12,
      followers: 150,
      following: 89,
    },
  });

  const handleAvatarUpload = async (file: File): Promise<string> => {
    // Simulate upload delay
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    // In a real app, you would upload to your backend
    const formData = new FormData();
    formData.append('avatar', file);
    
    // Example API call
    // const response = await fetch('/api/users/1/avatar', {
    //   method: 'POST',
    //   body: formData,
    // });
    // const { avatarUrl } = await response.json();
    
    // For demo purposes, return a mock URL
    const mockUrl = `https://example.com/avatars/${Date.now()}.jpg`;
    
    // Update the profile with new avatar URL
    setProfile(prev => ({ ...prev, avatarUrl: mockUrl }));
    
    return mockUrl;
  };

  const handleProfileUpdate = async (data: Partial<ProfileData>): Promise<void> => {
    // In a real app, you would update the profile in your backend
    setProfile(prev => ({ ...prev, ...data }));
  };

  return (
    <ProfilePage
      profile={profile}
      onAvatarUpload={handleAvatarUpload}
      onProfileUpdate={handleProfileUpdate}
      isEditable={true}
    >
      <div className="space-y-6">
        <h2 className="text-2xl font-bold">My Projects</h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {Array.from({ length: 6 }).map((_, i) => (
            <div key={i} className="bg-white rounded-lg shadow-md p-4">
              <div className="h-32 bg-gray-200 rounded mb-4"></div>
              <h3 className="font-semibold">Project {i + 1}</h3>
              <p className="text-gray-600 text-sm">A cool LEGO project</p>
            </div>
          ))}
        </div>
      </div>
    </ProfilePage>
  );
};

// Example of a read-only profile page
export const ReadOnlyProfilePage: React.FC = () => {
  const profile: ProfileData = {
    id: '2',
    username: 'janesmith',
    displayName: 'Jane Smith',
    bio: 'LEGO master builder and community organizer.',
    avatarUrl: 'https://example.com/jane-avatar.jpg',
    stats: {
      projects: 8,
      followers: 75,
      following: 120,
    },
  };

  return (
    <ProfilePage profile={profile}>
      <div className="space-y-6">
        <h2 className="text-2xl font-bold">Jane's Projects</h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {Array.from({ length: 3 }).map((_, i) => (
            <div key={i} className="bg-white rounded-lg shadow-md p-4">
              <div className="h-32 bg-gray-200 rounded mb-4"></div>
              <h3 className="font-semibold">Jane's Project {i + 1}</h3>
              <p className="text-gray-600 text-sm">Amazing LEGO creation</p>
            </div>
          ))}
        </div>
      </div>
    </ProfilePage>
  );
}; 