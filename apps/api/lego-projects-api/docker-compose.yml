version: '3.8'
services:
  db:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=lego_projects
    ports:
      - '5433:5432'
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - '6380:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: pnpm run dev
    volumes:
      - .:/app
    ports:
      - '3001:3000'
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/lego_projects
      - JWT_SECRET=your-jwt-secret-here
      - AUTH_API=http://localhost:3001
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - S3_BUCKET=your-s3-bucket-name
      - S3_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=your-access-key
      - AWS_SECRET_ACCESS_KEY=your-secret-key
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - PORT=3000
      - NODE_ENV=development
    depends_on:
      - db
      - redis

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9201:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  db_data:
  redis_data:
  esdata:

# Note: If running on Linux, you may need to increase the virtual memory map count:
# sudo sysctl -w vm.max_map_count=262144 