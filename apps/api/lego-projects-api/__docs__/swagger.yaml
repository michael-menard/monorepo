openapi: 3.0.3
info:
  title: Lego Projects Profile API
  version: 1.0.0
  description: API for user profile management (excluding authentication)
servers:
  - url: /api/users
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "user-123"
        username:
          type: string
          example: "testuser"
        email:
          type: string
          format: email
          example: "test@example.com"
        preferredName:
          type: string
          example: "Testy"
        avatar:
          type: string
          nullable: true
          example: "https://bucket.s3.region.amazonaws.com/avatars/user-123/avatar-uuid.jpg"
        createdAt:
          type: string
          format: date-time
          example: "2024-07-12T12:34:56.000Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-07-12T12:34:56.000Z"
    Error:
      type: object
      properties:
        error:
          type: string
          example: "User not found"
        details:
          type: string
          nullable: true
          example: "No user with the given ID."
paths:
  /{id}:
    get:
      summary: Get user profile
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                success:
                  value:
                    id: "user-123"
                    username: "testuser"
                    email: "test@example.com"
                    preferredName: "Testy"
                    avatar: "https://bucket.s3.region.amazonaws.com/avatars/user-123/avatar-uuid.jpg"
                    createdAt: "2024-07-12T12:34:56.000Z"
                    updatedAt: "2024-07-12T12:34:56.000Z"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                notFound:
                  value:
                    error: "User not found"
                    details: "No user with the given ID."
    post:
      summary: Create user profile with avatar
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "testuser"
                email:
                  type: string
                  format: email
                  example: "test@example.com"
                preferredName:
                  type: string
                  example: "Testy"
                avatar:
                  type: string
                  format: binary
            examples:
              valid:
                summary: Valid request
                value:
                  username: "testuser"
                  email: "test@example.com"
                  preferredName: "Testy"
                  avatar: (binary file)
      responses:
        '201':
          description: Created user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                created:
                  value:
                    id: "user-123"
                    username: "testuser"
                    email: "test@example.com"
                    preferredName: "Testy"
                    avatar: "https://bucket.s3.region.amazonaws.com/avatars/user-123/avatar-uuid.jpg"
                    createdAt: "2024-07-12T12:34:56.000Z"
                    updatedAt: "2024-07-12T12:34:56.000Z"
        '400':
          description: Invalid input or missing avatar
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                missingAvatar:
                  value:
                    error: "Avatar file is required"
                invalidEmail:
                  value:
                    error: "Invalid input"
                    details: "email: Invalid email address"
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                exists:
                  value:
                    error: "User already exists"
    patch:
      summary: Update user profile
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "updateduser"
                email:
                  type: string
                  format: email
                  example: "updated@example.com"
                preferredName:
                  type: string
                  example: "Updated Name"
            examples:
              valid:
                summary: Valid update
                value:
                  username: "updateduser"
                  email: "updated@example.com"
                  preferredName: "Updated Name"
      responses:
        '200':
          description: Updated user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                updated:
                  value:
                    id: "user-123"
                    username: "updateduser"
                    email: "updated@example.com"
                    preferredName: "Updated Name"
                    avatar: "https://bucket.s3.region.amazonaws.com/avatars/user-123/avatar-uuid.jpg"
                    createdAt: "2024-07-12T12:34:56.000Z"
                    updatedAt: "2024-07-12T13:00:00.000Z"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalid:
                  value:
                    error: "Invalid input"
                    details: "username: Must not be empty"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                notFound:
                  value:
                    error: "User not found"
  /{id}/avatar:
    delete:
      summary: Delete user avatar
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Avatar deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Avatar deleted successfully"
                  user:
                    $ref: '#/components/schemas/User'
              examples:
                deleted:
                  value:
                    message: "Avatar deleted successfully"
                    user:
                      id: "user-123"
                      username: "testuser"
                      email: "test@example.com"
                      preferredName: "Testy"
                      avatar: null
                      createdAt: "2024-07-12T12:34:56.000Z"
                      updatedAt: "2024-07-12T13:10:00.000Z"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                notFound:
                  value:
                    error: "User not found" 