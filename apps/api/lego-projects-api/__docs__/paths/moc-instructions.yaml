/api/mocs:
  post:
    summary: Create a new MOC instruction
    description: Create a new MOC instruction with metadata (title, description, tags, thumbnailUrl)
    security:
      - cookieAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
                nullable: true
              tags:
                type: array
                items:
                  type: string
                nullable: true
              thumbnailUrl:
                type: string
                nullable: true
    responses:
      '201':
        description: MOC created successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              success:
                value:
                  status: 201
                  message: "MOC created successfully"
                  data:
                    id: "123e4567-e89b-12d3-a456-426614174000"
                    userId: "user-uuid"
                    title: "My MOC"
                    description: "A cool MOC"
                    tags:
                      - "star wars"
                      - "spaceship"
                    thumbnailUrl: "https://example.com/thumb.jpg"
                    createdAt: "2024-06-10T12:00:00Z"
                    updatedAt: "2024-06-10T12:00:00Z"
      '400':
        description: Validation error
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              validationError:
                value:
                  status: 400
                  message: "Invalid input"
                  error: "VALIDATION_ERROR"
                  details: {}
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              unauthorized:
                value:
                  status: 401
                  message: "Unauthorized"
                  error: "UNAUTHORIZED"
                  details: null

/api/mocs/{id}:
  patch:
    summary: Update MOC instruction metadata
    description: Update the metadata for an existing MOC instruction (title, description, tags, thumbnailUrl)
    security:
      - cookieAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
                nullable: true
              tags:
                type: array
                items:
                  type: string
                nullable: true
              thumbnailUrl:
                type: string
                nullable: true
    responses:
      '200':
        description: MOC updated successfully or not found (returns empty object if not found)
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              updated:
                value:
                  status: 200
                  message: "MOC updated successfully"
                  data:
                    id: "123e4567-e89b-12d3-a456-426614174000"
                    userId: "user-uuid"
                    title: "Updated MOC"
                    description: "Updated description"
                    tags:
                      - "star wars"
                      - "spaceship"
                    thumbnailUrl: "https://example.com/thumb.jpg"
                    createdAt: "2024-06-10T12:00:00Z"
                    updatedAt: "2024-06-10T13:00:00Z"
              notFound:
                value:
                  status: 200
                  message: "MOC not found"
                  data: {}
      '400':
        description: Validation error
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              validationError:
                value:
                  status: 400
                  message: "Invalid input"
                  error: "VALIDATION_ERROR"
                  details: {}
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              unauthorized:
                value:
                  status: 401
                  message: "Unauthorized"
                  error: "UNAUTHORIZED"
                  details: null
      '403':
        description: Forbidden (user does not own MOC)
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              forbidden:
                value:
                  status: 403
                  message: "Forbidden: You can only access your own MOCs"
                  error: "FORBIDDEN"
                  details: null
  get:
    summary: Get MOC instruction details
    description: Get the details of a MOC instruction by ID
    security:
      - cookieAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: MOC found or not found (returns empty object if not found)
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              found:
                value:
                  status: 200
                  message: "MOC found"
                  data:
                    id: "123e4567-e89b-12d3-a456-426614174000"
                    userId: "user-uuid"
                    title: "My MOC"
                    description: "A cool MOC"
                    tags:
                      - "star wars"
                      - "spaceship"
                    thumbnailUrl: "https://example.com/thumb.jpg"
                    createdAt: "2024-06-10T12:00:00Z"
                    updatedAt: "2024-06-10T12:00:00Z"
              notFound:
                value:
                  status: 200
                  message: "MOC not found"
                  data: {}
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              unauthorized:
                value:
                  status: 401
                  message: "Unauthorized"
                  error: "UNAUTHORIZED"
                  details: null
      '403':
        description: Forbidden (user does not own MOC)
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              forbidden:
                value:
                  status: 403
                  message: "Forbidden: You can only access your own MOCs"
                  error: "FORBIDDEN"
                  details: null

/api/mocs/search:
  get:
    summary: Search MOC instructions
    description: Full-text search for MOC instructions using Elasticsearch
    security:
      - cookieAuth: []
    parameters:
      - in: query
        name: q
        required: false
        schema:
          type: string
        description: Search query
      - in: query
        name: tags
        required: false
        schema:
          type: string
        description: Filter by tags (comma-separated)
      - in: query
        name: limit
        required: false
        schema:
          type: integer
          default: 20
        description: Number of results to return
      - in: query
        name: offset
        required: false
        schema:
          type: integer
          default: 0
        description: Number of results to skip
    responses:
      '200':
        description: Search results retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                results:
                  type: array
                  items:
                    $ref: '../components/schemas.yaml#/MocInstruction'
                total:
                  type: integer
                  description: Total number of results
                limit:
                  type: integer
                  description: Number of results returned
                offset:
                  type: integer
                  description: Number of results skipped
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'

/api/mocs/{id}/files:
  post:
    summary: Upload file to MOC instruction
    description: Upload a file (instruction or parts list) to an existing MOC instruction
    security:
      - cookieAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
        description: MOC ID
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                type: string
                format: binary
                description: File to upload (PDF, CSV, or other supported formats)
    responses:
      '201':
        description: File uploaded successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              success:
                value:
                  status: 201
                  message: "File uploaded successfully"
                  data:
                    id: "file-uuid"
                    mocId: "moc-uuid"
                    originalFilename: "instruction.pdf"
                    fileType: "instruction"
                    fileUrl: "https://example.com/file.pdf"
                    mimeType: "application/pdf"
                    fileSize: 1024000
                    createdAt: "2024-06-10T12:00:00Z"
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
      '403':
        description: Forbidden (user does not own MOC)
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
      '413':
        description: File too large
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'

/api/mocs/{id}/files/{fileId}:
  delete:
    summary: Delete file from MOC instruction
    description: Delete a file from an existing MOC instruction
    security:
      - cookieAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
        description: MOC ID
      - in: path
        name: fileId
        required: true
        schema:
          type: string
          format: uuid
        description: File ID
    responses:
      '200':
        description: File deleted successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              success:
                value:
                  status: 200
                  message: "File deleted successfully"
                  data: {}
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
      '403':
        description: Forbidden (user does not own MOC)
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
      '404':
        description: File not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'

/api/mocs/{id}/files/{fileId}/download-info:
  get:
    summary: Get file download information
    description: Get download information for a specific file (signed URL for S3, local path for development)
    security:
      - cookieAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
        description: MOC ID
      - in: path
        name: fileId
        required: true
        schema:
          type: string
          format: uuid
        description: File ID
    responses:
      '200':
        description: Download information retrieved successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              s3File:
                value:
                  status: 200
                  message: "Download information retrieved successfully"
                  data:
                    url: "https://s3.amazonaws.com/bucket/signed-url?expires=1234567890"
                    filename: "instruction.pdf"
                    mimeType: "application/pdf"
                    expiresAt: "2024-06-10T13:00:00Z"
              localFile:
                value:
                  status: 200
                  message: "Download information retrieved successfully"
                  data:
                    url: "/uploads/moc-files/user123/moc456/instruction/file.pdf"
                    filename: "file.pdf"
                    mimeType: "application/pdf"
              fileNotFound:
                value:
                  status: 200
                  message: "File not found"
                  data: {}
              fileMissing:
                value:
                  status: 200
                  message: "File not found in storage"
                  data:
                    fileId: "file-uuid"
                    originalFilename: "instruction.pdf"
                    fileType: "instruction"
                    missing: true
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              unauthorized:
                value:
                  status: 401
                  message: "Unauthorized"
                  error: "UNAUTHORIZED"
                  details: null
      '403':
        description: Forbidden (user does not own MOC)
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              forbidden:
                value:
                  status: 403
                  message: "Forbidden: You can only access files from your own MOCs"
                  error: "FORBIDDEN"
                  details: null

/api/mocs/{id}/files/{fileId}/download:
  get:
    summary: Download file directly
    description: Download a file directly (streams local files, redirects to S3 for production)
    security:
      - cookieAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
        description: MOC ID
      - in: path
        name: fileId
        required: true
        schema:
          type: string
          format: uuid
        description: File ID
    responses:
      '200':
        description: File download (local development) or redirect (production)
        content:
          application/pdf:
            schema:
              type: string
              format: binary
            description: File content (local development only)
          application/octet-stream:
            schema:
              type: string
              format: binary
            description: File content (local development only)
          text/csv:
            schema:
              type: string
              format: binary
            description: File content (local development only)
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              fileNotFound:
                value:
                  status: 200
                  message: "File not found"
                  data: {}
              fileMissing:
                value:
                  status: 200
                  message: "File not found in storage"
                  data:
                    fileId: "file-uuid"
                    originalFilename: "instruction.pdf"
                    fileType: "instruction"
                    missing: true
      '302':
        description: Redirect to S3 signed URL (production only)
        headers:
          Location:
            description: S3 signed URL
            schema:
              type: string
              example: "https://s3.amazonaws.com/bucket/signed-url?expires=1234567890"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              unauthorized:
                value:
                  status: 401
                  message: "Unauthorized"
                  error: "UNAUTHORIZED"
                  details: null
      '403':
        description: Forbidden (user does not own MOC)
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              forbidden:
                value:
                  status: 403
                  message: "Forbidden: You can only download files from your own MOCs"
                  error: "FORBIDDEN"
                  details: null 

/api/mocs/{id}/gallery-images:
  post:
    summary: Link gallery image to MOC
    description: Link an existing gallery image to a MOC instruction
    security:
      - cookieAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
        description: MOC ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - galleryImageId
            properties:
              galleryImageId:
                type: string
                format: uuid
                description: ID of the gallery image to link
    responses:
      '200':
        description: Gallery image linked successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              success:
                value:
                  status: 200
                  message: "Gallery image linked successfully"
                  data:
                    id: "link-uuid"
                    mocId: "moc-uuid"
                    galleryImageId: "gallery-image-uuid"
      '400':
        description: Validation error
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
      '403':
        description: Forbidden (user does not own MOC or gallery image)
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
      '404':
        description: MOC or gallery image not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
  get:
    summary: Get linked gallery images for MOC
    description: Retrieve all gallery images linked to a MOC instruction
    security:
      - cookieAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
        description: MOC ID
    responses:
      '200':
        description: Gallery images retrieved successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              success:
                value:
                  status: 200
                  message: "Gallery images retrieved successfully"
                  data:
                    - id: "gallery-image-uuid"
                      userId: "user-uuid"
                      title: "MOC Build Photo"
                      description: "Front view of the completed MOC"
                      imageUrl: "https://example.com/image.jpg"
                      tags: ["front-view", "completed"]
                      createdAt: "2024-06-10T12:00:00Z"
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
      '403':
        description: Forbidden (user does not own MOC)
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
      '404':
        description: MOC not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'

/api/mocs/{id}/gallery-images/{galleryImageId}:
  delete:
    summary: Unlink gallery image from MOC
    description: Remove the link between a gallery image and MOC instruction
    security:
      - cookieAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
        description: MOC ID
      - in: path
        name: galleryImageId
        required: true
        schema:
          type: string
          format: uuid
        description: Gallery Image ID
    responses:
      '200':
        description: Gallery image unlinked successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
            examples:
              success:
                value:
                  status: 200
                  message: "Gallery image unlinked successfully"
                  data: {}
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
      '403':
        description: Forbidden (user does not own MOC or gallery image)
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse'
      '404':
        description: MOC, gallery image, or link not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas.yaml#/ApiResponse' 