import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import { z } from 'zod';
export const WishlistItemCard = ({ item, onEdit = () => { }, onDelete = () => { }, onDragStart, onDragEnd, draggable = true, }) => {
    return (_jsxs("div", { "aria-label": item.title, role: "button", tabIndex: 0, className: "relative flex items-center gap-4 bg-white rounded-lg shadow p-4 hover:shadow-lg transition group cursor-pointer", draggable: draggable, onDragStart: e => { e.dataTransfer.setData('text/plain', item.id); onDragStart?.(item.id); }, onDragEnd: onDragEnd, children: [_jsx("div", { className: "flex-shrink-0 cursor-grab pr-2", title: "Drag to reorder", children: _jsx("span", { className: "text-gray-400 text-2xl select-none", children: "\u22EE\u22EE" }) }), item.imageUrl && (_jsx("img", { src: item.imageUrl, alt: item.title, className: "w-16 h-16 object-cover rounded-md border border-gray-200" })), _jsxs("div", { className: "flex-1 min-w-0", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx("h3", { className: "font-semibold text-gray-900 text-base truncate", children: item.title }), item.category && (_jsx("span", { className: "px-2 py-0.5 bg-blue-100 text-blue-700 text-xs rounded-full truncate", children: item.category }))] }), item.description && (_jsx("p", { className: "text-gray-600 text-sm mt-1 line-clamp-2", children: item.description })), item.productLink && (_jsx("a", { href: item.productLink, target: "_blank", rel: "noopener noreferrer", className: "text-blue-600 hover:underline text-xs mt-1 block truncate", children: item.productLink }))] }), _jsxs("div", { className: "flex flex-col gap-2 ml-2", children: [_jsx("button", { type: "button", "aria-label": "Edit item", className: "p-2 rounded hover:bg-blue-100 text-blue-600", onClick: e => { e.stopPropagation(); onEdit?.(item.id); }, children: "\u270F\uFE0F" }), _jsx("button", { type: "button", "aria-label": "Delete item", className: "p-2 rounded hover:bg-red-100 text-red-600", onClick: e => { e.stopPropagation(); onDelete?.(item.id); }, children: "\uD83D\uDDD1\uFE0F" })] })] }));
};
export default WishlistItemCard;
