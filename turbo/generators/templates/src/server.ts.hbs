import express from 'express';
import helmet from 'helmet';
import cors from 'cors';
import rateLimit from 'express-rate-limit';
import cookieParser from 'cookie-parser';

import health from './routes/health.js';
import { requestLogger } from './logger.js';

export async function buildServer() {
  const app = express();

  // Security & parsing
  app.use(helmet());
  app.use(cors({ origin: true, credentials: true })); // open by default
  app.use(rateLimit({ windowMs: 15 * 60 * 1000, max: 100 }));
  app.use(cookieParser());
  app.use(express.json());

  // Logging
  app.use(requestLogger);

  // Routes
  app.use('/', health);

  // Docs (Swagger UI)
  const { mountDocs } = await import('./docs/swagger.js');
  mountDocs(app);

  // 404
  app.use((_req, res) => res.status(404).json({ error: 'Not Found' }));

  return app;
}
